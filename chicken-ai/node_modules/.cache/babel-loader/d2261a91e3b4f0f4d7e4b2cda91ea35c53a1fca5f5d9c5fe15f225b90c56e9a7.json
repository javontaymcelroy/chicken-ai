{"ast":null,"code":"var _jsxFileName = \"/Users/javontaymcelroy/Documents/Coding/chicken-ai/chicken-ai/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (inputText.trim()) {\n      setMessages([...messages, {\n        role: 'user',\n        content: inputText\n      }]);\n      const response = await fetch('/api/chatgpt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: inputText,\n          temperature: 0.7,\n          topP: 1,\n          maxLength: 150\n        })\n      });\n      console.log(\"Raw response:\", response);\n      const responseBody = await response.json();\n      console.log(\"Response body:\", responseBody);\n      if (responseBody.choices && responseBody.choices.length > 0) {\n        const chatGPTResponse = responseBody.content;\n        console.log(\"ChatGPT response:\", chatGPTResponse);\n        setMessages(prevMessages => [...prevMessages, {\n          role: 'assistant',\n          content: chatGPTResponse\n        }]);\n      } else {\n        console.error(\"No choices in the response body\");\n        console.log(\"Full response body:\", responseBody);\n      }\n      setInputText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chick-fil-A ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.role === \"user\" ? \"user\" : \"assistant\"}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eknFc6aZOFyWcYXhajWODc3egoI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","messages","setMessages","handleSubmit","e","preventDefault","trim","role","content","response","fetch","method","headers","body","JSON","stringify","prompt","temperature","topP","maxLength","console","log","responseBody","json","choices","length","chatGPTResponse","prevMessages","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/javontaymcelroy/Documents/Coding/chicken-ai/chicken-ai/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    if (inputText.trim()) {\n      setMessages([...messages, { role: 'user', content: inputText }]);\n  \n      const response = await fetch('/api/chatgpt', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          prompt: inputText,\n          temperature: 0.7,\n          topP: 1,\n          maxLength: 150,\n        }),\n      });\n  \n      console.log(\"Raw response:\", response);\n  \n      const responseBody = await response.json();\n      console.log(\"Response body:\", responseBody);\n  \n      if (responseBody.choices && responseBody.choices.length > 0) {\n        const chatGPTResponse = responseBody.content;\n        console.log(\"ChatGPT response:\", chatGPTResponse);\n  \n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { role: 'assistant', content: chatGPTResponse },\n        ]);\n      } else {\n        console.error(\"No choices in the response body\");\n        console.log(\"Full response body:\", responseBody);\n      }\n  \n      setInputText('');\n    }\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      <h1>Chick-fil-A ChatGPT</h1>\n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`chat-message ${message.role === \"user\" ? \"user\" : \"assistant\"}`}\n          >\n            {message.content}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}